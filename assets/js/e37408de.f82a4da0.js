"use strict";(self.webpackChunkneutron=self.webpackChunkneutron||[]).push([[57],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),u=o,k=p["".concat(l,".").concat(u)]||p[u]||m[u]||i;return t?r.createElement(k,a(a({ref:n},c),{},{components:t})):r.createElement(k,a({ref:n},c))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var d=2;d<i;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3131:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=t(7462),o=(t(7294),t(3905));const i={},a="Limit Order Tranches",s={unversionedId:"neutron/modules/dex/overview/concepts/limit-order-tranches",id:"neutron/modules/dex/overview/concepts/limit-order-tranches",title:"Limit Order Tranches",description:"Limit Order tranches are used to store liquidity in the form of limit orders. In addition to the PairID, TokenIn and TickIndex fields, Pools Reserves also have TracheKey, ReservesTokenIn, ReservesTokenOut, TotalTokenIn, TotalTokenOut and an optional ExpirationTime field.",source:"@site/docs/neutron/modules/dex/overview/concepts/limit-order-tranches.md",sourceDirName:"neutron/modules/dex/overview/concepts",slug:"/neutron/modules/dex/overview/concepts/limit-order-tranches",permalink:"/neutron/modules/dex/overview/concepts/limit-order-tranches",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Ticks",permalink:"/neutron/modules/dex/overview/concepts/ticks"},next:{title:"Messages",permalink:"/neutron/modules/dex/messages"}},l={},d=[],c={toc:d},p="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"limit-order-tranches"},"Limit Order Tranches"),(0,o.kt)("p",null,"Limit Order tranches are used to store liquidity in the form of limit orders. In addition to the ",(0,o.kt)("inlineCode",{parentName:"p"},"PairID"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"TokenIn")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"TickIndex")," fields, Pools Reserves also have ",(0,o.kt)("inlineCode",{parentName:"p"},"TracheKey"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ReservesTokenIn"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ReservesTokenOut"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"TotalTokenIn"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"TotalTokenOut")," and an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"ExpirationTime")," field."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-proto"},"type LimitOrderTranche struct {\n    PairID           *PairID\n    TokenIn          string\n    TickIndex        int64\n    TrancheKey       string                                 \n    ReservesTokenIn sdk.Int\n    ReservesTokenOut sdk.Int\n    TotalTokenIn     sdk.Int\n    TotalTokenOut    sdk.Int\n    ExpirationTime *time.Time\n}\n")),(0,o.kt)("p",null,"TrancheKey is a unique identifier for each LimitOrderTranche. TrancheKeys also represent a lexicographically sortable order in which tranches with a common PairID, TokenIn and TickIndex will be traded through. Ie. A tranche with TrancheKey \u201cA1\u201d will be traded through before a tranche with TrancheKey \u201cA2\u201d. ReservesTokenIn is the available token that has been added to a limit order by the \u201cmaker\u201d and represents the amount of ",(0,o.kt)("inlineCode",{parentName:"p"},"TokenIn")," that can be traded against. ",(0,o.kt)("inlineCode",{parentName:"p"},"ReservesTokenOut")," represents the filled amount of the limit order and can be withdrawn by the \u201cmaker\u201ds. ",(0,o.kt)("inlineCode",{parentName:"p"},"TotalTokenIn")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"TotalTokenOut")," are used to store the respective high watermarks for ",(0,o.kt)("inlineCode",{parentName:"p"},"ReservesTokenIn")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ReservesTokenOut")," and are used for the internal accounting of a limit order."),(0,o.kt)("p",null,"Lastly, ExpirationTime is an optional field used for Expiring limit orders (",(0,o.kt)("inlineCode",{parentName:"p"},"JUST_IN_TIME")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"GOOD_TIL_TIME"),"). At the end of each block any LimitOrders with ",(0,o.kt)("inlineCode",{parentName:"p"},"ExpirationTime")," <= ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.BlockTime()")," is converted to an ",(0,o.kt)("inlineCode",{parentName:"p"},"InactiveLimitOrderTranche")," where it can no longer be traded against."))}m.isMDXComponent=!0}}]);